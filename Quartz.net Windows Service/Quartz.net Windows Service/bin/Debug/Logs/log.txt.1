2014-08-28 09:44:59,560 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: obtaining instance for name &Spring.Scheduling.Quartz.SchedulerFactoryObject#0 => canonical name Spring.Scheduling.Quartz.SchedulerFactoryObject#0
2014-08-28 09:44:59,588 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:44:59,592 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.SchedulerFactoryObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 42].
2014-08-28 09:44:59,594 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:44:59,599 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' to allow for resolving potential circular references
2014-08-28 09:44:59,601 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:44:59,608 [10] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'triggers[0]' in object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' to object 'simpleTrigger'.
2014-08-28 09:44:59,611 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -       GetObjectInternal: obtaining instance for name simpleTrigger => canonical name simpleTrigger
2014-08-28 09:44:59,614 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'simpleTrigger'
2014-08-28 09:44:59,615 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'simpleTrigger' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.SimpleTriggerObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 33].
2014-08-28 09:44:59,617 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'simpleTrigger'.
2014-08-28 09:44:59,639 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'simpleTrigger' to allow for resolving potential circular references
2014-08-28 09:44:59,641 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'simpleTrigger'
2014-08-28 09:44:59,648 [10] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'jobDetail' in object 'simpleTrigger' to object 'jobDetailNonConcurrent'.
2014-08-28 09:44:59,650 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -          GetObjectInternal: obtaining instance for name jobDetailNonConcurrent => canonical name jobDetailNonConcurrent
2014-08-28 09:44:59,667 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'jobDetailNonConcurrent'
2014-08-28 09:44:59,669 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'jobDetailNonConcurrent' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 26].
2014-08-28 09:44:59,670 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'jobDetailNonConcurrent'.
2014-08-28 09:44:59,673 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'jobDetailNonConcurrent' to allow for resolving potential circular references
2014-08-28 09:44:59,675 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'jobDetailNonConcurrent'
2014-08-28 09:44:59,678 [10] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'targetObject' in object 'jobDetailNonConcurrent' to object 'genericServiceManager'.
2014-08-28 09:44:59,680 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -             GetObjectInternal: obtaining instance for name genericServiceManager => canonical name genericServiceManager
2014-08-28 09:44:59,682 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'genericServiceManager'
2014-08-28 09:44:59,683 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'genericServiceManager' with merged definition [RootObjectDefinition : Class [MyService.GenericServiceManager, MyService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 22].
2014-08-28 09:44:59,809 [10] ERROR Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -          GetObjectInternal: error obtaining object genericServiceManager
2014-08-28 09:44:59,859 [10] ERROR Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -       GetObjectInternal: error obtaining object jobDetailNonConcurrent
2014-08-28 09:44:59,917 [10] ERROR Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: error obtaining object simpleTrigger
2014-08-28 09:44:59,978 [10] ERROR Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - GetObjectInternal: error obtaining object &Spring.Scheduling.Quartz.SchedulerFactoryObject#0
2014-08-28 09:48:20,943 [8] DEBUG Spring.Context.Support.ContextHandler [(null)] - creating context 'spring.root'
2014-08-28 09:48:20,986 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Refreshing object factory 
2014-08-28 09:48:21,016 [8] DEBUG Spring.Objects.Factory.Xml.XmlObjectDefinitionReader [(null)] - Loading XML object definitions from file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml]
2014-08-28 09:48:21,029 [8] DEBUG Spring.Objects.Factory.Xml.XmlObjectDefinitionReader [(null)] - Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2014-08-28 09:48:21,033 [8] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Loading object definitions.
2014-08-28 09:48:21,036 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Loading object definitions...
2014-08-28 09:48:21,037 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default lazy init 'false'.
2014-08-28 09:48:21,038 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default dependency check 'none'.
2014-08-28 09:48:21,039 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default autowire 'no'.
2014-08-28 09:48:21,040 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default merge 'false'.
2014-08-28 09:48:21,041 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default init method ''.
2014-08-28 09:48:21,042 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default destroy method ''.
2014-08-28 09:48:21,043 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default autowire candidates ''.
2014-08-28 09:48:21,043 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default init method ''.
2014-08-28 09:48:21,044 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default destroy method ''.
2014-08-28 09:48:21,064 [8] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'myJob'.
2014-08-28 09:48:21,126 [8] WARN  Spring.Objects.Factory.Xml.ObjectsNamespaceParser [(null)] - The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element.
2014-08-28 09:48:21,129 [8] WARN  Spring.Objects.Factory.Xml.ObjectsNamespaceParser [(null)] - The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element.
2014-08-28 09:48:21,130 [8] WARN  Spring.Objects.Factory.Xml.ObjectsNamespaceParser [(null)] - The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element.
2014-08-28 09:48:21,132 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Neither XML 'id' nor 'name' specified - using generated object name [System.Type#289936B]
2014-08-28 09:48:21,133 [8] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'FindGenericServiceObjects'.
2014-08-28 09:48:21,135 [8] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'genericServiceManager'.
2014-08-28 09:48:21,142 [8] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'jobDetailNonConcurrent'.
2014-08-28 09:48:21,144 [8] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'simpleTrigger'.
2014-08-28 09:48:21,148 [8] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Neither XML 'id' nor 'name' specified - using generated object name [Spring.Scheduling.Quartz.SchedulerFactoryObject#0]
2014-08-28 09:48:21,149 [8] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:48:21,150 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Registering alias 'Spring.Scheduling.Quartz.SchedulerFactoryObject' for object with name 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:48:21,152 [8] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Found 6 <object> elements defining objects.
2014-08-28 09:48:21,153 [8] DEBUG Spring.Objects.Factory.Xml.XmlObjectDefinitionReader [(null)] - Loaded 6 object definitions from location [~/Config/spring-objects.xml]
2014-08-28 09:48:21,154 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - Refreshed ObjectFactory for application context 'spring.root'.
2014-08-28 09:48:21,154 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Registering well-known processors and objects
2014-08-28 09:48:21,156 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Custom post processing object factory
2014-08-28 09:48:21,157 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Post processing object factory using pre-registered processors
2014-08-28 09:48:21,158 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - 6 objects defined in application context [spring.root].
2014-08-28 09:48:21,158 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Post processing object factory using defined processors
2014-08-28 09:48:21,215 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Ignoring object class loading failure for object 'FindGenericServiceObjects'
Spring.Core.CannotLoadObjectTypeException: Cannot resolve type [MyService.ServiceLocatorImplementer, MyService] for object with name 'FindGenericServiceObjects' defined in file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 11 ---> System.TypeLoadException: Could not load type 'MyService.ServiceLocatorImplementer' from assembly 'MyService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.
   at System.Reflection.RuntimeAssembly.GetType(RuntimeAssembly assembly, String name, Boolean throwOnError, Boolean ignoreCase, ObjectHandleOnStack type)
   at System.Reflection.RuntimeAssembly.GetType(String name, Boolean throwOnError, Boolean ignoreCase)
   at Spring.Core.TypeResolution.TypeResolver.LoadTypeDirectlyFromAssembly(TypeAssemblyHolder typeInfo) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 123
   at Spring.Core.TypeResolution.TypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 75
   at Spring.Core.TypeResolution.GenericTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\GenericTypeResolver.cs:line 91
   at Spring.Core.TypeResolution.CachedTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\CachedTypeResolver.cs:line 107
   at Spring.Core.TypeResolution.TypeResolutionUtils.ResolveType(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolutionUtils.cs:line 101
   at Spring.Objects.Factory.Support.AbstractObjectDefinition.ResolveObjectType() in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs:line 704
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1202
   --- End of inner exception stack trace ---
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1206
   at Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.PredictObjectType(String objectName, RootObjectDefinition mod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs:line 160
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.IsFactoryObject(String objectName, RootObjectDefinition rod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1128
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.DoGetObjectNamesForType(Type type, Boolean includeNonSingletons, Boolean allowEagerInit) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1040
2014-08-28 09:48:21,260 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Ignoring object class loading failure for object 'FindGenericServiceObjects'
Spring.Core.CannotLoadObjectTypeException: Cannot resolve type [MyService.ServiceLocatorImplementer, MyService] for object with name 'FindGenericServiceObjects' defined in file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 11 ---> System.TypeLoadException: Could not load type 'MyService.ServiceLocatorImplementer' from assembly 'MyService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.
   at System.Reflection.RuntimeAssembly.GetType(RuntimeAssembly assembly, String name, Boolean throwOnError, Boolean ignoreCase, ObjectHandleOnStack type)
   at System.Reflection.RuntimeAssembly.GetType(String name, Boolean throwOnError, Boolean ignoreCase)
   at Spring.Core.TypeResolution.TypeResolver.LoadTypeDirectlyFromAssembly(TypeAssemblyHolder typeInfo) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 123
   at Spring.Core.TypeResolution.TypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 75
   at Spring.Core.TypeResolution.GenericTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\GenericTypeResolver.cs:line 91
   at Spring.Core.TypeResolution.CachedTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\CachedTypeResolver.cs:line 107
   at Spring.Core.TypeResolution.TypeResolutionUtils.ResolveType(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolutionUtils.cs:line 101
   at Spring.Objects.Factory.Support.AbstractObjectDefinition.ResolveObjectType() in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs:line 704
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1202
   --- End of inner exception stack trace ---
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1206
   at Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.PredictObjectType(String objectName, RootObjectDefinition mod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs:line 160
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.IsFactoryObject(String objectName, RootObjectDefinition rod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1128
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.DoGetObjectNamesForType(Type type, Boolean includeNonSingletons, Boolean allowEagerInit) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1040
2014-08-28 09:48:21,303 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Ignoring object class loading failure for object 'FindGenericServiceObjects'
Spring.Core.CannotLoadObjectTypeException: Cannot resolve type [MyService.ServiceLocatorImplementer, MyService] for object with name 'FindGenericServiceObjects' defined in file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 11 ---> System.TypeLoadException: Could not load type 'MyService.ServiceLocatorImplementer' from assembly 'MyService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.
   at System.Reflection.RuntimeAssembly.GetType(RuntimeAssembly assembly, String name, Boolean throwOnError, Boolean ignoreCase, ObjectHandleOnStack type)
   at System.Reflection.RuntimeAssembly.GetType(String name, Boolean throwOnError, Boolean ignoreCase)
   at Spring.Core.TypeResolution.TypeResolver.LoadTypeDirectlyFromAssembly(TypeAssemblyHolder typeInfo) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 123
   at Spring.Core.TypeResolution.TypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 75
   at Spring.Core.TypeResolution.GenericTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\GenericTypeResolver.cs:line 91
   at Spring.Core.TypeResolution.CachedTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\CachedTypeResolver.cs:line 107
   at Spring.Core.TypeResolution.TypeResolutionUtils.ResolveType(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolutionUtils.cs:line 101
   at Spring.Objects.Factory.Support.AbstractObjectDefinition.ResolveObjectType() in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs:line 704
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1202
   --- End of inner exception stack trace ---
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1206
   at Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.PredictObjectType(String objectName, RootObjectDefinition mod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs:line 160
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.IsFactoryObject(String objectName, RootObjectDefinition rod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1128
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.DoGetObjectNamesForType(Type type, Boolean includeNonSingletons, Boolean allowEagerInit) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1040
2014-08-28 09:48:21,305 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2014-08-28 09:48:21,347 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Ignoring object class loading failure for object 'FindGenericServiceObjects'
Spring.Core.CannotLoadObjectTypeException: Cannot resolve type [MyService.ServiceLocatorImplementer, MyService] for object with name 'FindGenericServiceObjects' defined in file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 11 ---> System.TypeLoadException: Could not load type 'MyService.ServiceLocatorImplementer' from assembly 'MyService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.
   at System.Reflection.RuntimeAssembly.GetType(RuntimeAssembly assembly, String name, Boolean throwOnError, Boolean ignoreCase, ObjectHandleOnStack type)
   at System.Reflection.RuntimeAssembly.GetType(String name, Boolean throwOnError, Boolean ignoreCase)
   at Spring.Core.TypeResolution.TypeResolver.LoadTypeDirectlyFromAssembly(TypeAssemblyHolder typeInfo) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 123
   at Spring.Core.TypeResolution.TypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 75
   at Spring.Core.TypeResolution.GenericTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\GenericTypeResolver.cs:line 91
   at Spring.Core.TypeResolution.CachedTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\CachedTypeResolver.cs:line 107
   at Spring.Core.TypeResolution.TypeResolutionUtils.ResolveType(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolutionUtils.cs:line 101
   at Spring.Objects.Factory.Support.AbstractObjectDefinition.ResolveObjectType() in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs:line 704
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1202
   --- End of inner exception stack trace ---
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1206
   at Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.PredictObjectType(String objectName, RootObjectDefinition mod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs:line 160
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.IsFactoryObject(String objectName, RootObjectDefinition rod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1128
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.DoGetObjectNamesForType(Type type, Boolean includeNonSingletons, Boolean allowEagerInit) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1040
2014-08-28 09:48:21,391 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Ignoring object class loading failure for object 'FindGenericServiceObjects'
Spring.Core.CannotLoadObjectTypeException: Cannot resolve type [MyService.ServiceLocatorImplementer, MyService] for object with name 'FindGenericServiceObjects' defined in file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 11 ---> System.TypeLoadException: Could not load type 'MyService.ServiceLocatorImplementer' from assembly 'MyService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.
   at System.Reflection.RuntimeAssembly.GetType(RuntimeAssembly assembly, String name, Boolean throwOnError, Boolean ignoreCase, ObjectHandleOnStack type)
   at System.Reflection.RuntimeAssembly.GetType(String name, Boolean throwOnError, Boolean ignoreCase)
   at Spring.Core.TypeResolution.TypeResolver.LoadTypeDirectlyFromAssembly(TypeAssemblyHolder typeInfo) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 123
   at Spring.Core.TypeResolution.TypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 75
   at Spring.Core.TypeResolution.GenericTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\GenericTypeResolver.cs:line 91
   at Spring.Core.TypeResolution.CachedTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\CachedTypeResolver.cs:line 107
   at Spring.Core.TypeResolution.TypeResolutionUtils.ResolveType(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolutionUtils.cs:line 101
   at Spring.Objects.Factory.Support.AbstractObjectDefinition.ResolveObjectType() in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs:line 704
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1202
   --- End of inner exception stack trace ---
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1206
   at Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.PredictObjectType(String objectName, RootObjectDefinition mod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs:line 160
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.IsFactoryObject(String objectName, RootObjectDefinition rod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1128
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.DoGetObjectNamesForType(Type type, Boolean includeNonSingletons, Boolean allowEagerInit) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1040
2014-08-28 09:48:21,393 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - processed 0 IObjectPostProcessors defined in application context [spring.root].
2014-08-28 09:48:21,395 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2014-08-28 09:48:21,440 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Ignoring object class loading failure for object 'FindGenericServiceObjects'
Spring.Core.CannotLoadObjectTypeException: Cannot resolve type [MyService.ServiceLocatorImplementer, MyService] for object with name 'FindGenericServiceObjects' defined in file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 11 ---> System.TypeLoadException: Could not load type 'MyService.ServiceLocatorImplementer' from assembly 'MyService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.
   at System.Reflection.RuntimeAssembly.GetType(RuntimeAssembly assembly, String name, Boolean throwOnError, Boolean ignoreCase, ObjectHandleOnStack type)
   at System.Reflection.RuntimeAssembly.GetType(String name, Boolean throwOnError, Boolean ignoreCase)
   at Spring.Core.TypeResolution.TypeResolver.LoadTypeDirectlyFromAssembly(TypeAssemblyHolder typeInfo) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 123
   at Spring.Core.TypeResolution.TypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 75
   at Spring.Core.TypeResolution.GenericTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\GenericTypeResolver.cs:line 91
   at Spring.Core.TypeResolution.CachedTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\CachedTypeResolver.cs:line 107
   at Spring.Core.TypeResolution.TypeResolutionUtils.ResolveType(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolutionUtils.cs:line 101
   at Spring.Objects.Factory.Support.AbstractObjectDefinition.ResolveObjectType() in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs:line 704
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1202
   --- End of inner exception stack trace ---
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1206
   at Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.PredictObjectType(String objectName, RootObjectDefinition mod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs:line 160
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.IsFactoryObject(String objectName, RootObjectDefinition rod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1128
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.DoGetObjectNamesForType(Type type, Boolean includeNonSingletons, Boolean allowEagerInit) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1040
2014-08-28 09:48:21,445 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2014-08-28 09:48:21,531 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Ignoring object class loading failure for object 'FindGenericServiceObjects'
Spring.Core.CannotLoadObjectTypeException: Cannot resolve type [MyService.ServiceLocatorImplementer, MyService] for object with name 'FindGenericServiceObjects' defined in file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 11 ---> System.TypeLoadException: Could not load type 'MyService.ServiceLocatorImplementer' from assembly 'MyService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.
   at System.Reflection.RuntimeAssembly.GetType(RuntimeAssembly assembly, String name, Boolean throwOnError, Boolean ignoreCase, ObjectHandleOnStack type)
   at System.Reflection.RuntimeAssembly.GetType(String name, Boolean throwOnError, Boolean ignoreCase)
   at Spring.Core.TypeResolution.TypeResolver.LoadTypeDirectlyFromAssembly(TypeAssemblyHolder typeInfo) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 123
   at Spring.Core.TypeResolution.TypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolver.cs:line 75
   at Spring.Core.TypeResolution.GenericTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\GenericTypeResolver.cs:line 91
   at Spring.Core.TypeResolution.CachedTypeResolver.Resolve(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\CachedTypeResolver.cs:line 107
   at Spring.Core.TypeResolution.TypeResolutionUtils.ResolveType(String typeName) in c:\_prj\spring-net\src\Spring\Spring.Core\Core\TypeResolution\TypeResolutionUtils.cs:line 101
   at Spring.Objects.Factory.Support.AbstractObjectDefinition.ResolveObjectType() in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectDefinition.cs:line 704
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1202
   --- End of inner exception stack trace ---
   at Spring.Objects.Factory.Support.AbstractObjectFactory.ResolveObjectType(RootObjectDefinition rod, String objectName) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractObjectFactory.cs:line 1206
   at Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.PredictObjectType(String objectName, RootObjectDefinition mod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\AbstractAutowireCapableObjectFactory.cs:line 160
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.IsFactoryObject(String objectName, RootObjectDefinition rod) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1128
   at Spring.Objects.Factory.Support.DefaultListableObjectFactory.DoGetObjectNamesForType(Type type, Boolean includeNonSingletons, Boolean allowEagerInit) in c:\_prj\spring-net\src\Spring\Spring.Core\Objects\Factory\Support\DefaultListableObjectFactory.cs:line 1040
2014-08-28 09:48:21,535 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: obtaining instance for name &Spring.Scheduling.Quartz.SchedulerFactoryObject#0 => canonical name Spring.Scheduling.Quartz.SchedulerFactoryObject#0
2014-08-28 09:48:21,545 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:48:21,549 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.SchedulerFactoryObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 42].
2014-08-28 09:48:21,551 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:48:21,558 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' to allow for resolving potential circular references
2014-08-28 09:48:21,560 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:48:21,570 [8] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'triggers[0]' in object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' to object 'simpleTrigger'.
2014-08-28 09:48:21,575 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -       GetObjectInternal: obtaining instance for name simpleTrigger => canonical name simpleTrigger
2014-08-28 09:48:21,577 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'simpleTrigger'
2014-08-28 09:48:21,579 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'simpleTrigger' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.SimpleTriggerObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 33].
2014-08-28 09:48:21,582 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'simpleTrigger'.
2014-08-28 09:48:21,588 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'simpleTrigger' to allow for resolving potential circular references
2014-08-28 09:48:21,597 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'simpleTrigger'
2014-08-28 09:48:21,599 [8] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'jobDetail' in object 'simpleTrigger' to object 'jobDetailNonConcurrent'.
2014-08-28 09:48:21,603 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -          GetObjectInternal: obtaining instance for name jobDetailNonConcurrent => canonical name jobDetailNonConcurrent
2014-08-28 09:48:21,607 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'jobDetailNonConcurrent'
2014-08-28 09:48:21,609 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'jobDetailNonConcurrent' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 26].
2014-08-28 09:48:21,617 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'jobDetailNonConcurrent'.
2014-08-28 09:48:21,620 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'jobDetailNonConcurrent' to allow for resolving potential circular references
2014-08-28 09:48:21,622 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'jobDetailNonConcurrent'
2014-08-28 09:48:21,627 [8] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'targetObject' in object 'jobDetailNonConcurrent' to object 'genericServiceManager'.
2014-08-28 09:48:21,634 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -             GetObjectInternal: obtaining instance for name genericServiceManager => canonical name genericServiceManager
2014-08-28 09:48:21,637 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'genericServiceManager'
2014-08-28 09:48:21,639 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'genericServiceManager' with merged definition [RootObjectDefinition : Class [MyService.GenericServiceManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 22].
2014-08-28 09:48:21,645 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'genericServiceManager'.
2014-08-28 09:48:21,650 [8] DEBUG Spring.Objects.Factory.Support.SimpleInstantiationStrategy [(null)] - Generating a subclass of the [MyService.GenericServiceManager] class for the 'genericServiceManager' object definition for the purposes of method injection.
2014-08-28 09:48:21,730 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'genericServiceManager' to allow for resolving potential circular references
2014-08-28 09:48:21,734 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'genericServiceManager'
2014-08-28 09:48:21,738 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'genericServiceManager'
2014-08-28 09:48:21,758 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'genericServiceManager'
2014-08-28 09:48:21,762 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'genericServiceManager'
2014-08-28 09:48:21,779 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'genericServiceManager'.
2014-08-28 09:48:21,787 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -          GetObjectInternal: returning instance for objectname genericServiceManager
2014-08-28 09:48:21,805 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the name property on the IObjectNameAware object 'jobDetailNonConcurrent'.
2014-08-28 09:48:21,809 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the ObjectFactory property on the IObjectFactoryAware object 'jobDetailNonConcurrent'.
2014-08-28 09:48:21,816 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'jobDetailNonConcurrent'
2014-08-28 09:48:21,819 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling AfterPropertiesSet() on object with name 'jobDetailNonConcurrent'.
2014-08-28 09:48:21,833 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'jobDetailNonConcurrent'
2014-08-28 09:48:21,836 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'jobDetailNonConcurrent'
2014-08-28 09:48:21,839 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Object with name 'jobDetailNonConcurrent' is a factory object.
2014-08-28 09:48:21,847 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Dereferencing Object with name 'jobDetailNonConcurrent'
2014-08-28 09:48:21,849 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'jobDetailNonConcurrent'
2014-08-28 09:48:21,853 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -       GetObjectInternal: returning instance for objectname jobDetailNonConcurrent
2014-08-28 09:48:21,859 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the name property on the IObjectNameAware object 'simpleTrigger'.
2014-08-28 09:48:21,862 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'simpleTrigger'
2014-08-28 09:48:21,867 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling AfterPropertiesSet() on object with name 'simpleTrigger'.
2014-08-28 09:48:21,871 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'simpleTrigger'
2014-08-28 09:48:21,877 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'simpleTrigger'
2014-08-28 09:48:21,883 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'simpleTrigger'.
2014-08-28 09:48:21,885 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: returning instance for objectname simpleTrigger
2014-08-28 09:48:21,888 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the name property on the IObjectNameAware object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:48:21,897 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:48:21,903 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling AfterPropertiesSet() on object with name 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:48:21,965 [8] INFO  Quartz.Impl.StdSchedulerFactory [(null)] - Using default implementation for object serializer
2014-08-28 09:48:22,023 [8] INFO  Quartz.Impl.StdSchedulerFactory [(null)] - Using default implementation for ThreadExecutor
2014-08-28 09:48:22,083 [8] INFO  Quartz.Core.SchedulerSignalerImpl [(null)] - Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2014-08-28 09:48:22,096 [8] INFO  Quartz.Core.QuartzScheduler [(null)] - Quartz Scheduler v.2.2.4.400 created.
2014-08-28 09:48:22,100 [8] INFO  Quartz.Simpl.RAMJobStore [(null)] - RAMJobStore initialized.
2014-08-28 09:48:22,107 [8] INFO  Quartz.Core.QuartzScheduler [(null)] - Scheduler meta-data: Quartz Scheduler (v2.2.4.400) 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'Quartz.Simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2014-08-28 09:48:22,109 [8] INFO  Quartz.Impl.StdSchedulerFactory [(null)] - Quartz scheduler 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' initialized
2014-08-28 09:48:22,117 [8] INFO  Quartz.Impl.StdSchedulerFactory [(null)] - Quartz scheduler version: 2.2.4.400
2014-08-28 09:48:22,120 [8] INFO  Quartz.Core.QuartzScheduler [(null)] - JobFactory set to: Spring.Scheduling.Quartz.AdaptableJobFactory
2014-08-28 09:48:22,162 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:48:22,177 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:48:22,179 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for IFactoryObject instance for name 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:48:22,188 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - GetObjectInternal: returning instance for objectname &Spring.Scheduling.Quartz.SchedulerFactoryObject#0
2014-08-28 09:48:22,199 [8] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Preinstantiating singletons
2014-08-28 09:48:22,203 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2014-08-28 09:48:22,207 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: obtaining instance for name myJob => canonical name myJob
2014-08-28 09:48:22,209 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'myJob'
2014-08-28 09:48:22,214 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'myJob' with merged definition [RootObjectDefinition : Class [MyService.MyJob]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 6].
2014-08-28 09:48:22,217 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'myJob'.
2014-08-28 09:48:22,219 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'myJob' to allow for resolving potential circular references
2014-08-28 09:48:22,224 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'myJob'
2014-08-28 09:48:22,227 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'myJob'
2014-08-28 09:48:22,229 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'myJob'
2014-08-28 09:48:22,231 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'myJob'
2014-08-28 09:48:22,235 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'myJob'.
2014-08-28 09:48:22,247 [8] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - GetObjectInternal: returning instance for objectname myJob
2014-08-28 09:50:03,392 [9] DEBUG Spring.Context.Support.ContextHandler [(null)] - creating context 'spring.root'
2014-08-28 09:50:03,432 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Refreshing object factory 
2014-08-28 09:50:03,453 [9] DEBUG Spring.Objects.Factory.Xml.XmlObjectDefinitionReader [(null)] - Loading XML object definitions from file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml]
2014-08-28 09:50:03,466 [9] DEBUG Spring.Objects.Factory.Xml.XmlObjectDefinitionReader [(null)] - Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2014-08-28 09:50:03,471 [9] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Loading object definitions.
2014-08-28 09:50:03,473 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Loading object definitions...
2014-08-28 09:50:03,475 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default lazy init 'false'.
2014-08-28 09:50:03,476 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default dependency check 'none'.
2014-08-28 09:50:03,477 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default autowire 'no'.
2014-08-28 09:50:03,478 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default merge 'false'.
2014-08-28 09:50:03,479 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default init method ''.
2014-08-28 09:50:03,479 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default destroy method ''.
2014-08-28 09:50:03,480 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default autowire candidates ''.
2014-08-28 09:50:03,481 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default init method ''.
2014-08-28 09:50:03,482 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default destroy method ''.
2014-08-28 09:50:03,510 [9] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'myJob'.
2014-08-28 09:50:03,517 [9] WARN  Spring.Objects.Factory.Xml.ObjectsNamespaceParser [(null)] - The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element.
2014-08-28 09:50:03,520 [9] WARN  Spring.Objects.Factory.Xml.ObjectsNamespaceParser [(null)] - The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element.
2014-08-28 09:50:03,521 [9] WARN  Spring.Objects.Factory.Xml.ObjectsNamespaceParser [(null)] - The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element.
2014-08-28 09:50:03,524 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Neither XML 'id' nor 'name' specified - using generated object name [System.Type#3EA2A94]
2014-08-28 09:50:03,525 [9] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'FindGenericServiceObjects'.
2014-08-28 09:50:03,528 [9] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'genericServiceManager'.
2014-08-28 09:50:03,550 [9] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'jobDetailNonConcurrent'.
2014-08-28 09:50:03,555 [9] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'simpleTrigger'.
2014-08-28 09:50:03,560 [9] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Neither XML 'id' nor 'name' specified - using generated object name [Spring.Scheduling.Quartz.SchedulerFactoryObject#0]
2014-08-28 09:50:03,563 [9] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:50:03,565 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Registering alias 'Spring.Scheduling.Quartz.SchedulerFactoryObject' for object with name 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:50:03,568 [9] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Found 6 <object> elements defining objects.
2014-08-28 09:50:03,570 [9] DEBUG Spring.Objects.Factory.Xml.XmlObjectDefinitionReader [(null)] - Loaded 6 object definitions from location [~/Config/spring-objects.xml]
2014-08-28 09:50:03,572 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - Refreshed ObjectFactory for application context 'spring.root'.
2014-08-28 09:50:03,574 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Registering well-known processors and objects
2014-08-28 09:50:03,578 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Custom post processing object factory
2014-08-28 09:50:03,580 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Post processing object factory using pre-registered processors
2014-08-28 09:50:03,582 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - 6 objects defined in application context [spring.root].
2014-08-28 09:50:03,584 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Post processing object factory using defined processors
2014-08-28 09:50:03,603 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2014-08-28 09:50:03,608 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - processed 0 IObjectPostProcessors defined in application context [spring.root].
2014-08-28 09:50:03,611 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2014-08-28 09:50:03,616 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2014-08-28 09:50:03,620 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: obtaining instance for name &Spring.Scheduling.Quartz.SchedulerFactoryObject#0 => canonical name Spring.Scheduling.Quartz.SchedulerFactoryObject#0
2014-08-28 09:50:03,625 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:50:03,629 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.SchedulerFactoryObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 42].
2014-08-28 09:50:03,631 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:50:03,637 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' to allow for resolving potential circular references
2014-08-28 09:50:03,639 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:50:03,646 [9] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'triggers[0]' in object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' to object 'simpleTrigger'.
2014-08-28 09:50:03,649 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -       GetObjectInternal: obtaining instance for name simpleTrigger => canonical name simpleTrigger
2014-08-28 09:50:03,651 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'simpleTrigger'
2014-08-28 09:50:03,653 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'simpleTrigger' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.SimpleTriggerObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 33].
2014-08-28 09:50:03,655 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'simpleTrigger'.
2014-08-28 09:50:03,658 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'simpleTrigger' to allow for resolving potential circular references
2014-08-28 09:50:03,660 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'simpleTrigger'
2014-08-28 09:50:03,662 [9] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'jobDetail' in object 'simpleTrigger' to object 'jobDetailNonConcurrent'.
2014-08-28 09:50:03,665 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -          GetObjectInternal: obtaining instance for name jobDetailNonConcurrent => canonical name jobDetailNonConcurrent
2014-08-28 09:50:03,667 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'jobDetailNonConcurrent'
2014-08-28 09:50:03,669 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'jobDetailNonConcurrent' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 26].
2014-08-28 09:50:03,671 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'jobDetailNonConcurrent'.
2014-08-28 09:50:03,674 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'jobDetailNonConcurrent' to allow for resolving potential circular references
2014-08-28 09:50:03,676 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'jobDetailNonConcurrent'
2014-08-28 09:50:03,678 [9] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'targetObject' in object 'jobDetailNonConcurrent' to object 'genericServiceManager'.
2014-08-28 09:50:03,680 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -             GetObjectInternal: obtaining instance for name genericServiceManager => canonical name genericServiceManager
2014-08-28 09:50:03,682 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'genericServiceManager'
2014-08-28 09:50:03,684 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'genericServiceManager' with merged definition [RootObjectDefinition : Class [MyService.GenericServiceManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 22].
2014-08-28 09:50:03,686 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'genericServiceManager'.
2014-08-28 09:50:03,689 [9] DEBUG Spring.Objects.Factory.Support.SimpleInstantiationStrategy [(null)] - Generating a subclass of the [MyService.GenericServiceManager] class for the 'genericServiceManager' object definition for the purposes of method injection.
2014-08-28 09:50:03,789 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'genericServiceManager' to allow for resolving potential circular references
2014-08-28 09:50:03,792 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'genericServiceManager'
2014-08-28 09:50:03,795 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'genericServiceManager'
2014-08-28 09:50:03,799 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'genericServiceManager'
2014-08-28 09:50:03,802 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'genericServiceManager'
2014-08-28 09:50:03,806 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'genericServiceManager'.
2014-08-28 09:50:03,808 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -          GetObjectInternal: returning instance for objectname genericServiceManager
2014-08-28 09:50:03,820 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the name property on the IObjectNameAware object 'jobDetailNonConcurrent'.
2014-08-28 09:50:03,822 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the ObjectFactory property on the IObjectFactoryAware object 'jobDetailNonConcurrent'.
2014-08-28 09:50:03,824 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'jobDetailNonConcurrent'
2014-08-28 09:50:03,826 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling AfterPropertiesSet() on object with name 'jobDetailNonConcurrent'.
2014-08-28 09:50:03,839 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'jobDetailNonConcurrent'
2014-08-28 09:50:03,842 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'jobDetailNonConcurrent'
2014-08-28 09:50:03,844 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Object with name 'jobDetailNonConcurrent' is a factory object.
2014-08-28 09:50:03,846 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Dereferencing Object with name 'jobDetailNonConcurrent'
2014-08-28 09:50:03,848 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'jobDetailNonConcurrent'
2014-08-28 09:50:03,852 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -       GetObjectInternal: returning instance for objectname jobDetailNonConcurrent
2014-08-28 09:50:03,856 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the name property on the IObjectNameAware object 'simpleTrigger'.
2014-08-28 09:50:03,859 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'simpleTrigger'
2014-08-28 09:50:03,861 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling AfterPropertiesSet() on object with name 'simpleTrigger'.
2014-08-28 09:50:03,865 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'simpleTrigger'
2014-08-28 09:50:03,868 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'simpleTrigger'
2014-08-28 09:50:03,870 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'simpleTrigger'.
2014-08-28 09:50:03,872 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: returning instance for objectname simpleTrigger
2014-08-28 09:50:03,875 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the name property on the IObjectNameAware object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:50:03,877 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:50:03,879 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling AfterPropertiesSet() on object with name 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:50:03,928 [9] INFO  Quartz.Impl.StdSchedulerFactory [(null)] - Using default implementation for object serializer
2014-08-28 09:50:03,971 [9] INFO  Quartz.Impl.StdSchedulerFactory [(null)] - Using default implementation for ThreadExecutor
2014-08-28 09:50:04,014 [9] INFO  Quartz.Core.SchedulerSignalerImpl [(null)] - Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2014-08-28 09:50:04,017 [9] INFO  Quartz.Core.QuartzScheduler [(null)] - Quartz Scheduler v.2.2.4.400 created.
2014-08-28 09:50:04,022 [9] INFO  Quartz.Simpl.RAMJobStore [(null)] - RAMJobStore initialized.
2014-08-28 09:50:04,029 [9] INFO  Quartz.Core.QuartzScheduler [(null)] - Scheduler meta-data: Quartz Scheduler (v2.2.4.400) 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'Quartz.Core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'Quartz.Simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'Quartz.Simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2014-08-28 09:50:04,031 [9] INFO  Quartz.Impl.StdSchedulerFactory [(null)] - Quartz scheduler 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0' initialized
2014-08-28 09:50:04,033 [9] INFO  Quartz.Impl.StdSchedulerFactory [(null)] - Quartz scheduler version: 2.2.4.400
2014-08-28 09:50:04,036 [9] INFO  Quartz.Core.QuartzScheduler [(null)] - JobFactory set to: Spring.Scheduling.Quartz.AdaptableJobFactory
2014-08-28 09:50:04,064 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:50:04,067 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'
2014-08-28 09:50:04,069 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for IFactoryObject instance for name 'Spring.Scheduling.Quartz.SchedulerFactoryObject#0'.
2014-08-28 09:50:04,072 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - GetObjectInternal: returning instance for objectname &Spring.Scheduling.Quartz.SchedulerFactoryObject#0
2014-08-28 09:50:04,077 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Preinstantiating singletons
2014-08-28 09:50:04,080 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2014-08-28 09:50:04,082 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: obtaining instance for name myJob => canonical name myJob
2014-08-28 09:50:04,084 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'myJob'
2014-08-28 09:50:04,086 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'myJob' with merged definition [RootObjectDefinition : Class [MyService.MyJob]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 6].
2014-08-28 09:50:04,088 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'myJob'.
2014-08-28 09:50:04,090 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'myJob' to allow for resolving potential circular references
2014-08-28 09:50:04,093 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'myJob'
2014-08-28 09:50:04,095 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'myJob'
2014-08-28 09:50:04,097 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'myJob'
2014-08-28 09:50:04,099 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'myJob'
2014-08-28 09:50:04,101 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'myJob'.
2014-08-28 09:50:04,103 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - GetObjectInternal: returning instance for objectname myJob
2014-08-28 09:50:04,105 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: obtaining instance for name FindGenericServiceObjects => canonical name FindGenericServiceObjects
2014-08-28 09:50:04,107 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'FindGenericServiceObjects'
2014-08-28 09:50:04,109 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'FindGenericServiceObjects' with merged definition [RootObjectDefinition : Class [MyService.ServiceLocatorImplementer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 11].
2014-08-28 09:50:04,111 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'FindGenericServiceObjects'.
2014-08-28 09:50:04,116 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'System.Type#3EA2A94' with merged definition [RootObjectDefinition : Class [System.Type]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = GetType; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 13].
2014-08-28 09:50:04,119 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'System.Type#3EA2A94'.
2014-08-28 09:50:04,126 [9] DEBUG Spring.Objects.Factory.Support.ConstructorResolver [(null)] - Object 'System.Type#3EA2A94' instantiated via factory method [System.Type GetType(System.String, Boolean, Boolean)].
2014-08-28 09:50:04,129 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'System.Type#3EA2A94'
2014-08-28 09:50:04,131 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'System.Type#3EA2A94'
2014-08-28 09:50:04,133 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'System.Type#3EA2A94'
2014-08-28 09:50:04,135 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'System.Type#3EA2A94'.
2014-08-28 09:50:04,138 [9] DEBUG Spring.Objects.Factory.Support.ConstructorResolver [(null)] - Object 'FindGenericServiceObjects' instantiated via constructor [Void .ctor(System.Type)].
2014-08-28 09:50:04,140 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'FindGenericServiceObjects' to allow for resolving potential circular references
2014-08-28 09:50:04,142 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'FindGenericServiceObjects'
2014-08-28 09:50:04,144 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'FindGenericServiceObjects'
2014-08-28 09:50:04,146 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'FindGenericServiceObjects'
2014-08-28 09:50:04,161 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'FindGenericServiceObjects'
2014-08-28 09:50:04,163 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'FindGenericServiceObjects'.
2014-08-28 09:50:04,165 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - GetObjectInternal: returning instance for objectname FindGenericServiceObjects
2014-08-28 09:50:04,167 [9] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2014-08-28 09:50:04,170 [9] INFO  Spring.Scheduling.Quartz.SchedulerFactoryObject [(null)] - Starting Quartz Scheduler now
2014-08-28 09:50:04,193 [9] INFO  Quartz.Core.QuartzScheduler [(null)] - Scheduler Spring.Scheduling.Quartz.SchedulerFactoryObject#0_$_NON_CLUSTERED started.
2014-08-28 09:50:04,202 [9] INFO  Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Completed
2014-08-28 09:50:04,206 [9] DEBUG Spring.Context.Support.ContextRegistry [(null)] - Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2014-08-28 09:50:04,207 [Spring.Scheduling.Quartz.SchedulerFactoryObject#0_Worker-1] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: obtaining instance for name FindGenericServiceObjects => canonical name FindGenericServiceObjects
2014-08-28 09:50:04,209 [9] DEBUG Spring.Context.Support.ContextHandler [(null)] - context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2014-08-28 09:50:04,222 [9] DEBUG Spring.Context.Support.ContextRegistry [(null)] - Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2014-08-28 09:50:04,220 [Spring.Scheduling.Quartz.SchedulerFactoryObject#0_Worker-1] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Returning cached instance of singleton object 'FindGenericServiceObjects'.
2014-08-28 09:50:04,227 [Spring.Scheduling.Quartz.SchedulerFactoryObject#0_Worker-1] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'FindGenericServiceObjects'.
2014-08-28 09:50:04,225 [9] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -       GetObjectInternal: obtaining instance for name ScheduleObject => canonical name ScheduleObject
2014-08-28 09:50:04,237 [Spring.Scheduling.Quartz.SchedulerFactoryObject#0_Worker-1] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: returning instance for objectname FindGenericServiceObjects
2014-08-28 09:50:04,249 [Spring.Scheduling.Quartz.SchedulerFactoryObject#0_Worker-1] DEBUG Spring.Context.Support.ContextRegistry [(null)] - Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2014-08-28 09:50:04,256 [9] ERROR Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - GetObjectInternal: error obtaining object ScheduleObject
2014-08-28 09:50:04,256 [Spring.Scheduling.Quartz.SchedulerFactoryObject#0_Worker-1] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: obtaining instance for name myJob => canonical name myJob
2014-08-28 09:50:35,359 [10] DEBUG Spring.Context.Support.ContextHandler [(null)] - creating context 'spring.root'
2014-08-28 09:50:35,416 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Refreshing object factory 
2014-08-28 09:50:35,455 [10] DEBUG Spring.Objects.Factory.Xml.XmlObjectDefinitionReader [(null)] - Loading XML object definitions from file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml]
2014-08-28 09:50:35,473 [10] DEBUG Spring.Objects.Factory.Xml.XmlObjectDefinitionReader [(null)] - Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2014-08-28 09:50:35,479 [10] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Loading object definitions.
2014-08-28 09:50:35,481 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Loading object definitions...
2014-08-28 09:50:35,483 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default lazy init 'false'.
2014-08-28 09:50:35,484 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default dependency check 'none'.
2014-08-28 09:50:35,485 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default autowire 'no'.
2014-08-28 09:50:35,486 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default merge 'false'.
2014-08-28 09:50:35,487 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default init method ''.
2014-08-28 09:50:35,488 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default destroy method ''.
2014-08-28 09:50:35,489 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default autowire candidates ''.
2014-08-28 09:50:35,490 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default init method ''.
2014-08-28 09:50:35,491 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Default destroy method ''.
2014-08-28 09:50:35,515 [10] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'myJob'.
2014-08-28 09:50:35,521 [10] WARN  Spring.Objects.Factory.Xml.ObjectsNamespaceParser [(null)] - The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element.
2014-08-28 09:50:35,524 [10] WARN  Spring.Objects.Factory.Xml.ObjectsNamespaceParser [(null)] - The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element.
2014-08-28 09:50:35,525 [10] WARN  Spring.Objects.Factory.Xml.ObjectsNamespaceParser [(null)] - The 'type' attribute is redundant when the 'name' attribute has been used on a constructor argument element.
2014-08-28 09:50:35,527 [10] DEBUG Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper [(null)] - Neither XML 'id' nor 'name' specified - using generated object name [System.Type#1803BC6]
2014-08-28 09:50:35,528 [10] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'FindGenericServiceObjects'.
2014-08-28 09:50:35,530 [10] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'genericServiceManager'.
2014-08-28 09:50:35,538 [10] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'jobDetailNonConcurrent'.
2014-08-28 09:50:35,541 [10] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'simpleTrigger'.
2014-08-28 09:50:35,544 [10] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Registering object definition with id 'ScheduleObject'.
2014-08-28 09:50:35,545 [10] DEBUG Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader [(null)] - Found 6 <object> elements defining objects.
2014-08-28 09:50:35,546 [10] DEBUG Spring.Objects.Factory.Xml.XmlObjectDefinitionReader [(null)] - Loaded 6 object definitions from location [~/Config/spring-objects.xml]
2014-08-28 09:50:35,547 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - Refreshed ObjectFactory for application context 'spring.root'.
2014-08-28 09:50:35,549 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Registering well-known processors and objects
2014-08-28 09:50:35,551 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Custom post processing object factory
2014-08-28 09:50:35,552 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Post processing object factory using pre-registered processors
2014-08-28 09:50:35,552 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - 6 objects defined in application context [spring.root].
2014-08-28 09:50:35,553 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - ApplicationContext Refresh: Post processing object factory using defined processors
2014-08-28 09:50:35,567 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2014-08-28 09:50:35,569 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - processed 0 IObjectPostProcessors defined in application context [spring.root].
2014-08-28 09:50:35,571 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2014-08-28 09:50:35,575 [10] DEBUG Spring.Context.Support.XmlApplicationContext [(null)] - No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2014-08-28 09:50:35,578 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -    GetObjectInternal: obtaining instance for name &ScheduleObject => canonical name ScheduleObject
2014-08-28 09:50:35,580 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'ScheduleObject'
2014-08-28 09:50:35,583 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'ScheduleObject' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.SchedulerFactoryObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 42].
2014-08-28 09:50:35,584 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ScheduleObject'.
2014-08-28 09:50:35,588 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'ScheduleObject' to allow for resolving potential circular references
2014-08-28 09:50:35,589 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'ScheduleObject'
2014-08-28 09:50:35,593 [10] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'triggers[0]' in object 'ScheduleObject' to object 'simpleTrigger'.
2014-08-28 09:50:35,595 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -       GetObjectInternal: obtaining instance for name simpleTrigger => canonical name simpleTrigger
2014-08-28 09:50:35,596 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'simpleTrigger'
2014-08-28 09:50:35,597 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'simpleTrigger' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.SimpleTriggerObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 33].
2014-08-28 09:50:35,598 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'simpleTrigger'.
2014-08-28 09:50:35,600 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'simpleTrigger' to allow for resolving potential circular references
2014-08-28 09:50:35,600 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'simpleTrigger'
2014-08-28 09:50:35,601 [10] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'jobDetail' in object 'simpleTrigger' to object 'jobDetailNonConcurrent'.
2014-08-28 09:50:35,602 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -          GetObjectInternal: obtaining instance for name jobDetailNonConcurrent => canonical name jobDetailNonConcurrent
2014-08-28 09:50:35,603 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'jobDetailNonConcurrent'
2014-08-28 09:50:35,604 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'jobDetailNonConcurrent' with merged definition [RootObjectDefinition : Class [Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 26].
2014-08-28 09:50:35,605 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'jobDetailNonConcurrent'.
2014-08-28 09:50:35,607 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'jobDetailNonConcurrent' to allow for resolving potential circular references
2014-08-28 09:50:35,608 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'jobDetailNonConcurrent'
2014-08-28 09:50:35,609 [10] DEBUG Spring.Objects.Factory.Support.ObjectDefinitionValueResolver [(null)] - Resolving reference from property 'targetObject' in object 'jobDetailNonConcurrent' to object 'genericServiceManager'.
2014-08-28 09:50:35,610 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -             GetObjectInternal: obtaining instance for name genericServiceManager => canonical name genericServiceManager
2014-08-28 09:50:35,611 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating shared instance of singleton object 'genericServiceManager'
2014-08-28 09:50:35,612 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Creating instance of Object 'genericServiceManager' with merged definition [RootObjectDefinition : Class [MyService.GenericServiceManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [C:\Users\fsideris\documents\visual studio 2012\Projects\Quartz.net Windows Service\Quartz.net Windows Service\bin\Debug\Config\spring-objects.xml] line 22].
2014-08-28 09:50:35,613 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'genericServiceManager'.
2014-08-28 09:50:35,615 [10] DEBUG Spring.Objects.Factory.Support.SimpleInstantiationStrategy [(null)] - Generating a subclass of the [MyService.GenericServiceManager] class for the 'genericServiceManager' object definition for the purposes of method injection.
2014-08-28 09:50:35,663 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Eagerly caching object 'genericServiceManager' to allow for resolving potential circular references
2014-08-28 09:50:35,665 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Configuring object using definition 'genericServiceManager'
2014-08-28 09:50:35,667 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'genericServiceManager'
2014-08-28 09:50:35,669 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'genericServiceManager'
2014-08-28 09:50:35,671 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'genericServiceManager'
2014-08-28 09:50:35,673 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling code asked for normal instance for name 'genericServiceManager'.
2014-08-28 09:50:35,674 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] -          GetObjectInternal: returning instance for objectname genericServiceManager
2014-08-28 09:50:35,681 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the name property on the IObjectNameAware object 'jobDetailNonConcurrent'.
2014-08-28 09:50:35,683 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Setting the ObjectFactory property on the IObjectFactoryAware object 'jobDetailNonConcurrent'.
2014-08-28 09:50:35,684 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors before initialization of object 'jobDetailNonConcurrent'
2014-08-28 09:50:35,685 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Calling AfterPropertiesSet() on object with name 'jobDetailNonConcurrent'.
2014-08-28 09:50:35,694 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'jobDetailNonConcurrent'
2014-08-28 09:50:35,695 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Cached shared instance of singleton object 'jobDetailNonConcurrent'
2014-08-28 09:50:35,696 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Object with name 'jobDetailNonConcurrent' is a factory object.
2014-08-28 09:50:35,697 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Dereferencing Object with name 'jobDetailNonConcurrent'
2014-08-28 09:50:35,699 [10] DEBUG Spring.Objects.Factory.Support.DefaultListableObjectFactory [(null)] - Invoking IObjectPostProcessors after initialization of object 'jobDetailNonConcurrent'
